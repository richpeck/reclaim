###########################################################
###########################################################
##                _   _           _                      ##
##               | | | |         | |                     ##
##               | |_| | __ _ ___| |__                   ##
##               |  _  |/ _` / __| '_ \                  ##
##               | | | | (_| \__ \ | | |                 ##
##               \_| |_/\__,_|___/_| |_|                 ##
##                                                       ##
###########################################################
###########################################################

## Used to traverse nested pairs (hashes) ##

###########################################################
###########################################################

## Extends Hash class ##
class Hash

  def each_nested_pair
    self.each_pair do |k,v|
      if v.is_a?(Hash)
        v.each_nested_pair {|k2,v2| yield "#{k}-#{k2}",v2} #-> RECURSION!!
      else
        yield(k,v)
      end
    end
  end

end

###########################################################
###########################################################
